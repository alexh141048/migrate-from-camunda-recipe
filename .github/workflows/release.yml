name: Release

on:
  push:
    branches:
      - build/setup-release-process
  workflow_dispatch:
    inputs:
      release_branch:
        description: 'The branch to release from'
        required: true
        default: 'build/setup-release-process'
      next_version:
        description: 'The next development version to set (without -SNAPSHOT suffix)'
        required: true
        default: '1.0.0-alpha-2'
      dry_run:
        description: 'Dry-Run: Skips remote operations when true'
        type: boolean
        required: true
        default: false
jobs:
  precheck:
    name: Precheck
    description: 'Evaluate the release version, set it in the project and commit the change'
    runs-on: ubuntu-latest
    outputs:
      is_prerelease: fromJSON(${{steps.version.outputs.is_prerelease}})
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{github.event.inputs.release_branch}}

      - name: Version
        id: version
        shell: bash
        run: |
          RELEASE_VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout | tail -n 1 | sed -e 's/-SNAPSHOT//')
          if [[ "$RELEASE_VERSION" == *"alpha"* || "$RELEASE_VERSION" == *"beta"* ]]; then
            echo "⚙ Releasing version $RELEASE_VERSION (Pre-Release)"
            echo "is_prerelease=true" >> $GITHUB_OUTPUT
          else
            echo "⚙ Releasing version $RELEASE_VERSION"
            echo "is_prerelease=false" >> $GITHUB_OUTPUT
          fi
          ./mvnw versions:set -DnewVersion=$RELEASE_VERSION
          if ! git diff-index --quiet HEAD --; then
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git commit -am "[releng] Releasing version $RELEASE_VERSION"
            git push origin ${{github.event.inputs.release_branch}}
          fi

  release:
    name: Release
    needs: precheck
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{github.event.inputs.release_branch}}

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          gpg-private-key: ${{secrets.GPG_SECRET_KEY}}
          gpg-passphrase: ${{secrets.GPG_PASSPHRASE}}
          cache: maven

      - name: Maven Build
        env:
          JRELEASER_PRERELEASE_ENABLED: ${{needs.precheck.outputs.is_prerelease}}
        run: |
          echo "JRELEASER_PRERELEASE_ENABLE: $JRELEASER_PRERELEASE_ENABLED"
          ./mvnw clean verify

      - name: Release with JReleaser
        uses: jreleaser/release-action@v2
        env:
          JRELEASER_PROJECT_VERSION: ${{needs.precheck.outputs.version}}
          JRELEASER_GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          JRELEASER_GPG_PUBLIC_KEY: ${{secrets.GPG_PUBLIC_KEY}}
          JRELEASER_GPG_SECRET_KEY: ${{secrets.GPG_SECRET_KEY}}
          JRELEASER_GPG_PASSPHRASE: ${{secrets.GPG_PASSPHRASE}}
          JRELEASER_MAVENCENTRAL_USERNAME: ${{secrets.OSSRH_USERNAME}}
          JRELEASER_MAVENCENTRAL_PASSWORD: ${{secrets.OSSRH_PASSWORD}}
          JRELEASER_DRY_RUN: ${{github.event.inputs.dry_run}}
          JRELEASER_PRERELEASE_ENABLED: ${{needs.precheck.outputs.is_prerelease}}

      - name: Set next development version
        run: |
          ./mvnw versions:set -DnewVersion=${{github.event.inputs.next_version}}-SNAPSHOT
          if ! git diff-index --quiet HEAD --; then
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git commit --allow-empty -am "[releng] Bump version to ${{github.event.inputs.next_version}}-SNAPSHOT"
            git push origin ${{github.event.inputs.release_branch}}